const { Masters } = require('../modules/modules'); // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª—å –º–∞—Å—Ç–µ—Ä–æ–≤
const ApiError = require('../error/ApiError'); // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞—Å—Å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ API
const logAction = require('../utils/logger'); // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ

// roleMiddleware –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω—É–∂–Ω—É—é —Ä–æ–ª—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'master') –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ä–µ—Å—É—Ä—Å—É
function roleMiddleware(requiredRole) {
    return async (req, res, next) => {
        logAction(`üõ°Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID: ${req.user.id}, —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ä–æ–ª—å: ${requiredRole}`);

        try {
            const userId = req.user.id; // –ò–∑–≤–ª–µ–∫–∞–µ–º userId –∏–∑ –æ–±—ä–µ–∫—Ç–∞ req, –∫–æ—Ç–æ—Ä—ã–π –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –ø–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è authMiddleware

            let hasRole = false; // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç —É–∫–∞–∑—ã–≤–∞—Ç—å, –∏–º–µ–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω—É–∂–Ω—É—é —Ä–æ–ª—å
            if (requiredRole === 'master') {
                logAction(`üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–∏ 'master' –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID: ${userId}`);
                const master = await Masters.findOne({ where: { user_id: userId } });
                hasRole = !!master; // –ï—Å–ª–∏ –º–∞—Å—Ç–µ—Ä –Ω–∞–π–¥–µ–Ω, hasRole —Å—Ç–∞–Ω–µ—Ç true
                logAction(`‚úÖ –ù–∞–π–¥–µ–Ω –º–∞—Å—Ç–µ—Ä: ${hasRole}`);
            }

            if (!hasRole) {
                logAction('‚ùå –û—à–∏–±–∫–∞: –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω, —Ä–æ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
                return next(ApiError.forbidden('–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω')); // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É 403 —á–µ—Ä–µ–∑ ApiError
            }

            next(); // –ï—Å–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–∏ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ, –ø–µ—Ä–µ–¥–∞–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–ª–µ–¥—É—é—â–µ–º—É middleware –∏–ª–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫—É –∑–∞–ø—Ä–æ—Å–∞
        } catch (error) {
            logAction(`üö® –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ä–æ–ª–∏: ${error.message}`);
            return next(ApiError.internal('–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞')); // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫—É —á–µ—Ä–µ–∑ ApiError
        }
    };
}

module.exports = roleMiddleware; // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º middleware –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —á–∞—Å—Ç—è—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
