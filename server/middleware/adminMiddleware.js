const adminAuthMiddleware = (req, res, next) => {
    // Логируем начало выполнения middleware
    console.log('Запрос на проверку пароля администратора');

    const { adminPassword } = req.body; 
    // Извлекаем поле `adminPassword` из тела запроса (req.body).
    // Предполагается, что клиент передает пароль администратора в запросе.

    // Логируем полученный пароль
    console.log('Полученный пароль администратора:', adminPassword);

    // Проверка пароля
    if (!adminPassword || adminPassword !== process.env.ADMIN) {
        // Условие проверяет:
        // 1. Отсутствует ли поле adminPassword.
        // 2. Совпадает ли переданный пароль с паролем администратора, хранящимся в переменной окружения (process.env.ADMIN).
        
        console.log('Ошибка: Неверный пароль администратора или отсутствует пароль');
        return res.status(403).json({ message: 'Доступ запрещен: неверный пароль администратора' });
        // Если пароль отсутствует или неверный, возвращаем ответ с кодом 403 (доступ запрещён)
        // и сообщением об ошибке в формате JSON.
    } else {
        console.log('Пароль администратора верный, продолжаем выполнение запроса');
        next();
        // Если пароль верный, вызываем `next()`, чтобы передать управление следующему middleware
        // или функции обработки запроса.
    }
};

module.exports = adminAuthMiddleware;
// Экспортируем middleware, чтобы его можно было подключить и использовать в других частях приложения. 
