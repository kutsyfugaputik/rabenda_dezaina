const { Statuses } = require('../modules/modules'); // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª—å —Å—Ç–∞—Ç—É—Å–æ–≤.
const ApiError = require('../error/ApiError'); // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞—Å—Å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ API.
const logAction = require('../utils/logger'); // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏–π.

class StatusController {
  // –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö —Å—Ç–∞—Ç—É—Å–æ–≤
  async getAll(req, res, next) {
    logAction('üì• –ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Å—Ç–∞—Ç—É—Å–æ–≤'); // –õ–æ–≥–∏—Ä—É–µ–º –Ω–∞—á–∞–ª–æ –∑–∞–ø—Ä–æ—Å–∞

    try {
      const statuses = await Statuses.findAll(); // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã —Å—Ç–∞—Ç—É—Å–æ–≤

      logAction(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${statuses.length} —Å—Ç–∞—Ç—É—Å–æ–≤`); // –õ–æ–≥ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è
      return res.json(statuses); // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Å—Ç–∞—Ç—É—Å–æ–≤ –∫–ª–∏–µ–Ω—Ç—É
    } catch (error) {
      logAction(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–æ–≤: ${error.message}`, 'üö®'); // –õ–æ–≥ –æ—à–∏–±–∫–∏
      return next(ApiError.internal('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —Å—Ç–∞—Ç—É—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.')); // –ü—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
    }
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ ID
  async getById(req, res, next) {
    logAction('üîç –ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ ID'); // –õ–æ–≥ –Ω–∞—á–∞–ª–∞ –∑–∞–ø—Ä–æ—Å–∞

    const { status_id } = req.params; // –ò–∑–≤–ª–µ–∫–∞–µ–º ID –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∑–∞–ø—Ä–æ—Å–∞
    logAction(`üîé –ü–æ–∏—Å–∫ —Å—Ç–∞—Ç—É—Å–∞ —Å ID: ${status_id}`); // –õ–æ–≥–∏—Ä—É–µ–º ID –¥–ª—è –ø–æ–∏—Å–∫–∞

    try {
      const status = await Statuses.findOne({ where: { status_id } }); // –ü–æ–∏—Å–∫ –∑–∞–ø–∏—Å–∏ –ø–æ ID

      if (!status) {
        logAction(`‚ö†Ô∏è –°—Ç–∞—Ç—É—Å —Å ID ${status_id} –Ω–µ –Ω–∞–π–¥–µ–Ω`); // –õ–æ–≥ –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω
        return next(ApiError.notFound('–°—Ç–∞—Ç—É—Å —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.')); // –û—à–∏–±–∫–∞ 404
      }

      logAction(`‚úÖ –°—Ç–∞—Ç—É—Å –Ω–∞–π–¥–µ–Ω: ${JSON.stringify(status)}`); // –õ–æ–≥ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
      return res.json(status); // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å
    } catch (error) {
      logAction(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —Å—Ç–∞—Ç—É—Å–∞: ${error.message}`, 'üö®'); // –õ–æ–≥ –æ—à–∏–±–∫–∏
      return next(ApiError.internal('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —Å—Ç–∞—Ç—É—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.')); // –ü—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
    }
  }
}

module.exports = new StatusController(); // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞
