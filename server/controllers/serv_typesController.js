const { ServiceTypes } = require('../modules/modules'); // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª—å —Ç–∏–ø–æ–≤ —É—Å–ª—É–≥.
const ApiError = require('../error/ApiError'); // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–π –∫–ª–∞—Å—Å –æ—à–∏–±–æ–∫.
const logAction = require('../utils/logger'); // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ª–æ–≥–≥–µ—Ä –¥–ª—è –∑–∞–ø–∏—Å–∏ –¥–µ–π—Å—Ç–≤–∏–π.

class ServiceTypeController {
  // –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ —É—Å–ª—É–≥
  async getAll(req, res, next) {
    logAction('üì• –ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ —É—Å–ª—É–≥'); // –õ–æ–≥ –Ω–∞—á–∞–ª–∞ –∑–∞–ø—Ä–æ—Å–∞

    try {
      const serviceTypes = await ServiceTypes.findAll(); // –ò–∑–≤–ª–µ–∫–∞–µ–º –≤—Å–µ —Ç–∏–ø—ã —É—Å–ª—É–≥ –∏–∑ –ë–î

      logAction(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${serviceTypes.length} —Ç–∏–ø–æ–≤ —É—Å–ª—É–≥`); // –õ–æ–≥ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
      return res.json(serviceTypes); // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–ª–∏–µ–Ω—Ç—É –º–∞—Å—Å–∏–≤ —Ç–∏–ø–æ–≤ —É—Å–ª—É–≥
    } catch (error) {
      logAction(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–∏–ø–æ–≤ —É—Å–ª—É–≥: ${error.message}`, 'üö®'); // –õ–æ–≥ –æ—à–∏–±–∫–∏
      return next(ApiError.internal('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–∏–ø–æ–≤ —É—Å–ª—É–≥')); // –ü—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –¥–∞–ª—å—à–µ —á–µ—Ä–µ–∑ ApiError
    }
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–¥–Ω–æ–≥–æ —Ç–∏–ø–∞ —É—Å–ª—É–≥–∏ –ø–æ ID
  async getById(req, res, next) {
    logAction('üîç –ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–∏–ø–∞ —É—Å–ª—É–≥–∏ –ø–æ ID'); // –õ–æ–≥ –Ω–∞—á–∞–ª–∞ –∑–∞–ø—Ä–æ—Å–∞

    const { service_type_id } = req.params; // –ò–∑–≤–ª–µ–∫–∞–µ–º ID –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –º–∞—Ä—à—Ä—É—Ç–∞
    logAction(`üîé –ü–æ–∏—Å–∫ —Ç–∏–ø–∞ —É—Å–ª—É–≥–∏ —Å ID: ${service_type_id}`); // –õ–æ–≥ ID, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –∏–¥–µ—Ç –ø–æ–∏—Å–∫

    try {
      const serviceType = await ServiceTypes.findOne({
        where: { service_type_id } // –£—Å–ª–æ–≤–∏–µ –ø–æ–∏—Å–∫–∞ –ø–æ ID
      });

      if (!serviceType) {
        logAction(`‚ö†Ô∏è –¢–∏–ø —É—Å–ª—É–≥–∏ —Å ID ${service_type_id} –Ω–µ –Ω–∞–π–¥–µ–Ω`); // –õ–æ–≥ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        return next(ApiError.notFound('–¢–∏–ø —É—Å–ª—É–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω')); // –ü—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º 404 –æ—à–∏–±–∫—É
      }

      logAction(`‚úÖ –¢–∏–ø —É—Å–ª—É–≥–∏ —Å ID ${service_type_id} –Ω–∞–π–¥–µ–Ω: ${JSON.stringify(serviceType)}`); // –õ–æ–≥ –Ω–∞–π–¥–µ–Ω–Ω–æ–π –∑–∞–ø–∏—Å–∏
      return res.json(serviceType); // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–∞–π–¥–µ–Ω–Ω—É—é –∑–∞–ø–∏—Å—å –∫–ª–∏–µ–Ω—Ç—É
    } catch (error) {
      logAction(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —Ç–∏–ø–∞ —É—Å–ª—É–≥–∏: ${error.message}`, 'üö®'); // –õ–æ–≥ –æ—à–∏–±–∫–∏
      return next(ApiError.internal('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —Ç–∏–ø–∞ —É—Å–ª—É–≥–∏')); // –ü—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º 500 –æ—à–∏–±–∫—É
    }
  }
}

module.exports = new ServiceTypeController(); // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞
