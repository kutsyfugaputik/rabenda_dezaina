const express = require('express'); // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É express –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–∞—Ä—à—Ä—É—Ç–æ–≤
const router = express.Router(); // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä–∞
const requestsController = require('../controllers/reqController'); // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∑–∞—è–≤–∫–∞–º–∏
const authMiddleware = require('../middleware/authMiddleware'); // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º middleware –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const roleMiddleware = require('../middleware/roleMiddleware'); // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º middleware –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const logAction = require('../utils/logger'); // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ª–æ–≥–≥–µ—Ä
const ApiError = require('../error/ApiError'); // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º ApiError –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫

// –†–æ—É—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–∏
router.post('/create', authMiddleware, async (req, res, next) => {
    try {
        logAction('–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–∏.', 'üìù');
        await requestsController.createRequest(req, res); // –í—ã–∑–æ–≤ –º–µ—Ç–æ–¥–∞ createRequest –∏–∑ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞
    } catch (error) {
        logAction(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞—è–≤–∫–∏: ${error.message}`, '‚ùå');
        next(ApiError.internal('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞—è–≤–∫–∏.'));
    }
});

// –†–æ—É—Ç –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞—è–≤–∫–∏ –Ω–∞ '–∑–∞–≤–µ—Ä—à–µ–Ω–∞'
router.put('/:request_id/complete', async (req, res, next) => {
    try {
        logAction(`–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞—è–≤–∫–∏ —Å ID ${req.params.request_id} –Ω–∞ '–∑–∞–≤–µ—Ä—à–µ–Ω–∞'.`, 'üìù');
        await requestsController.updateToComplete(req, res); // –í—ã–∑–æ–≤ –º–µ—Ç–æ–¥–∞ updateToComplete –∏–∑ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞
    } catch (error) {
        logAction(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞—è–≤–∫–∏ —Å ID ${req.params.request_id}: ${error.message}`, '‚ùå');
        next(ApiError.internal('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞—è–≤–∫–∏ –Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.'));
    }
});

// –†–æ—É—Ç –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞—è–≤–∫–∏ –Ω–∞ '–æ—Ç–º–µ–Ω–µ–Ω–∞'
router.put('/:request_id/cancel', authMiddleware, roleMiddleware('master'), async (req, res, next) => {
    try {
        logAction(`–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞—è–≤–∫–∏ —Å ID ${req.params.request_id} –Ω–∞ '–æ—Ç–º–µ–Ω–µ–Ω–∞'.`, 'üìù');
        await requestsController.updateToCanceled(req, res); // –í—ã–∑–æ–≤ –º–µ—Ç–æ–¥–∞ updateToCanceled –∏–∑ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞
    } catch (error) {
        logAction(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞—è–≤–∫–∏ —Å ID ${req.params.request_id}: ${error.message}`, '‚ùå');
        next(ApiError.internal('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞—è–≤–∫–∏ –Ω–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.'));
    }
});

// –†–æ—É—Ç –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞—è–≤–∫–∏ –Ω–∞ '–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞'
router.put('/:request_id/confirm', authMiddleware, roleMiddleware('master'), async (req, res, next) => {
    try {
        logAction(`–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞—è–≤–∫–∏ —Å ID ${req.params.request_id} –Ω–∞ '–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞'.`, 'üìù');
        await requestsController.updateToConfirm(req, res); // –í—ã–∑–æ–≤ –º–µ—Ç–æ–¥–∞ updateToConfirm –∏–∑ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞
    } catch (error) {
        logAction(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞—è–≤–∫–∏ —Å ID ${req.params.request_id}: ${error.message}`, '‚ùå');
        next(ApiError.internal('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞—è–≤–∫–∏ –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞.'));
    }
});

// –†–æ—É—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –∑–∞—è–≤–æ–∫ –º–∞—Å—Ç–µ—Ä–∞
router.get('/master/:master_id', async (req, res, next) => {
    try {
        logAction(`–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞—è–≤–æ–∫ –º–∞—Å—Ç–µ—Ä–∞ —Å ID: ${req.params.master_id}.`, 'üìù');
        await requestsController.getRequestsByMaster(req, res); // –í—ã–∑–æ–≤ –º–µ—Ç–æ–¥–∞ getRequestsByMaster –∏–∑ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞
    } catch (error) {
        logAction(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞—è–≤–æ–∫ –º–∞—Å—Ç–µ—Ä–∞ —Å ID: ${req.params.master_id}: ${error.message}`, '‚ùå');
        next(ApiError.internal('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞—è–≤–æ–∫ –º–∞—Å—Ç–µ—Ä–∞.'));
    }
});

// –†–æ—É—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –∑–∞—è–≤–æ–∫ –∫–ª–∏–µ–Ω—Ç–∞
router.get('/client/:client_id', async (req, res, next) => {
    try {
        logAction(`–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞—è–≤–æ–∫ –∫–ª–∏–µ–Ω—Ç–∞ —Å ID: ${req.params.client_id}.`, 'üìù');
        await requestsController.getRequestsByClient(req, res); // –í—ã–∑–æ–≤ –º–µ—Ç–æ–¥–∞ getRequestsByClient –∏–∑ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞
    } catch (error) {
        logAction(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞—è–≤–æ–∫ –∫–ª–∏–µ–Ω—Ç–∞ —Å ID: ${req.params.client_id}: ${error.message}`, '‚ùå');
        next(ApiError.internal('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞—è–≤–æ–∫ –∫–ª–∏–µ–Ω—Ç–∞.'));
    }
});

module.exports = router; // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä
