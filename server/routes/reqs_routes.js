// routes/requests_routes.js
const express = require('express'); // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É express –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–∞—Ä—à—Ä—É—Ç–æ–≤
const router = express.Router(); // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä–∞
const requestsController = require('../controllers/reqController'); // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∑–∞—è–≤–∫–∞–º–∏
const authMiddleware = require('../middleware/authMiddleware'); // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º middleware –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const roleMiddleware = require('../middleware/roleMiddleware'); // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º middleware –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const logAction = require('../utils/logger'); // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ª–æ–≥–≥–µ—Ä
const ApiError = require('../error/ApiError'); // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º ApiError –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫

// –†–æ—É—Ç—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∞–º–∏

// –†–æ—É—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–∏
router.post('/create', authMiddleware, async (req, res, next) => {
    try {
        logAction('–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–∏.', 'üìù'); // –õ–æ–≥–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–∏
        await requestsController.createRequest(req, res); // –í—ã–∑–æ–≤ –º–µ—Ç–æ–¥–∞ createRequest –∏–∑ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞
        logAction('–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞.', '‚úÖ'); // –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç
    } catch (error) {
        logAction(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞—è–≤–∫–∏: ${error.message}`, '‚ùå'); // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
        next(ApiError.internal('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞—è–≤–∫–∏.')); // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫—É —Å –ø–æ–º–æ—â—å—é ApiError
    }
});

// –†–æ—É—Ç –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞—è–≤–∫–∏ –Ω–∞ '–∑–∞–≤–µ—Ä—à–µ–Ω–∞'
router.put('/:request_id/complete', async (req, res, next) => {
    try {
        logAction(`–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞—è–≤–∫–∏ —Å ID ${req.params.request_id} –Ω–∞ '–∑–∞–≤–µ—Ä—à–µ–Ω–∞'.`, 'üìù'); // –õ–æ–≥–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
        await requestsController.updateToComplete(req, res); // –í—ã–∑–æ–≤ –º–µ—Ç–æ–¥–∞ updateToComplete –∏–∑ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞
        logAction(`–°—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏ —Å ID ${req.params.request_id} —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ '–∑–∞–≤–µ—Ä—à–µ–Ω–∞'.`, '‚úÖ'); // –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ
    } catch (error) {
        logAction(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞—è–≤–∫–∏ —Å ID ${req.params.request_id}: ${error.message}`, '‚ùå'); // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
        next(ApiError.internal('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞—è–≤–∫–∏ –Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.')); // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫—É —Å –ø–æ–º–æ—â—å—é ApiError
    }
});

// –†–æ—É—Ç –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞—è–≤–∫–∏ –Ω–∞ '–æ—Ç–º–µ–Ω–µ–Ω–∞'
router.put('/:request_id/cancel', authMiddleware, roleMiddleware('master'), async (req, res, next) => {
    try {
        logAction(`–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞—è–≤–∫–∏ —Å ID ${req.params.request_id} –Ω–∞ '–æ—Ç–º–µ–Ω–µ–Ω–∞'.`, 'üìù'); // –õ–æ–≥–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
        await requestsController.updateToCanceled(req, res); // –í—ã–∑–æ–≤ –º–µ—Ç–æ–¥–∞ updateToCanceled –∏–∑ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞
        logAction(`–°—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏ —Å ID ${req.params.request_id} —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ '–æ—Ç–º–µ–Ω–µ–Ω–∞'.`, '‚úÖ'); // –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ
    } catch (error) {
        logAction(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞—è–≤–∫–∏ —Å ID ${req.params.request_id}: ${error.message}`, '‚ùå'); // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
        next(ApiError.internal('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞—è–≤–∫–∏ –Ω–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.')); // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫—É —Å –ø–æ–º–æ—â—å—é ApiError
    }
});

// –†–æ—É—Ç –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞—è–≤–∫–∏ –Ω–∞ '–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞'
router.put('/:request_id/confirm', authMiddleware, roleMiddleware('master'), async (req, res, next) => {
    try {
        logAction(`–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞—è–≤–∫–∏ —Å ID ${req.params.request_id} –Ω–∞ '–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞'.`, 'üìù'); // –õ–æ–≥–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
        await requestsController.updateToConfirm(req, res); // –í—ã–∑–æ–≤ –º–µ—Ç–æ–¥–∞ updateToConfirm –∏–∑ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞
        logAction(`–°—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏ —Å ID ${req.params.request_id} —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ '–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞'.`, '‚úÖ'); // –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ
    } catch (error) {
        logAction(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞—è–≤–∫–∏ —Å ID ${req.params.request_id}: ${error.message}`, '‚ùå'); // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
        next(ApiError.internal('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞—è–≤–∫–∏ –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞.')); // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫—É —Å –ø–æ–º–æ—â—å—é ApiError
    }
});

// –†–æ—É—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –∑–∞—è–≤–æ–∫ –º–∞—Å—Ç–µ—Ä–∞
router.get('/master/:master_id', async (req, res, next) => {
    try {
        logAction(`–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞—è–≤–æ–∫ –º–∞—Å—Ç–µ—Ä–∞ —Å ID: ${req.params.master_id}.`, 'üìù'); // –õ–æ–≥–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–∞—è–≤–æ–∫ –º–∞—Å—Ç–µ—Ä–∞
        await requestsController.getRequestsByMaster(req, res); // –í—ã–∑–æ–≤ –º–µ—Ç–æ–¥–∞ getRequestsByMaster –∏–∑ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞
        logAction(`–ó–∞—è–≤–∫–∏ –º–∞—Å—Ç–µ—Ä–∞ —Å ID: ${req.params.master_id} —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã.`, '‚úÖ'); // –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
    } catch (error) {
        logAction(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞—è–≤–æ–∫ –º–∞—Å—Ç–µ—Ä–∞ —Å ID: ${req.params.master_id}: ${error.message}`, '‚ùå'); // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
        next(ApiError.internal('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞—è–≤–æ–∫ –º–∞—Å—Ç–µ—Ä–∞.')); // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫—É —Å –ø–æ–º–æ—â—å—é ApiError
    }
});

// –†–æ—É—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –∑–∞—è–≤–æ–∫ –∫–ª–∏–µ–Ω—Ç–∞
router.get('/client/:client_id', async (req, res, next) => {
    try {
        logAction(`–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞—è–≤–æ–∫ –∫–ª–∏–µ–Ω—Ç–∞ —Å ID: ${req.params.client_id}.`, 'üìù'); // –õ–æ–≥–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–∞—è–≤–æ–∫ –∫–ª–∏–µ–Ω—Ç–∞
        await requestsController.getRequestsByClient(req, res); // –í—ã–∑–æ–≤ –º–µ—Ç–æ–¥–∞ getRequestsByClient –∏–∑ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞
        logAction(`–ó–∞—è–≤–∫–∏ –∫–ª–∏–µ–Ω—Ç–∞ —Å ID: ${req.params.client_id} —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã.`, '‚úÖ'); // –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
    } catch (error) {
        logAction(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞—è–≤–æ–∫ –∫–ª–∏–µ–Ω—Ç–∞ —Å ID: ${req.params.client_id}: ${error.message}`, '‚ùå'); // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
        next(ApiError.internal('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞—è–≤–æ–∫ –∫–ª–∏–µ–Ω—Ç–∞.')); // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫—É —Å –ø–æ–º–æ—â—å—é ApiError
    }
});

module.exports = router; // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä, —á—Ç–æ–±—ã –æ–Ω –±—ã–ª –¥–æ—Å—Ç—É–ø–µ–Ω –≤ –¥—Ä—É–≥–∏—Ö —á–∞—Å—Ç—è—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
