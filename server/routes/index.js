const Router = require("express"); // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É express –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä–∞
const router = new Router(); // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä–∞

const logAction = require('../utils/logger'); // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ª–æ–≥–≥–µ—Ä –¥–ª—è –∑–∞–ø–∏—Å–∏ –ª–æ–≥–æ–≤
const ApiError = require('../error/ApiError'); // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º ApiError –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ —Ä–æ—É—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
const discount_routes = require('../routes/discount_routes');
const feedback_routes = require('../routes/feedback_routes');
const masters_routes = require('../routes/masters_routes');
const reqs_routes = require('../routes/reqs_routes');
const serv_types_routes = require('../routes/serv_types_routes');
const services_routes = require('../routes/services_routes');
const statuses_routes = require('../routes/statuses_routes');
const users_routes = require('../routes/users_routes');

// –î–æ–±–∞–≤–ª—è–µ–º —Ä–æ—É—Ç—ã –≤ –æ–±—â–∏–π –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä, –∏—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥ .use() –¥–ª—è —É–∫–∞–∑–∞–Ω–∏—è –ø—É—Ç–∏ –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
router.use('/discount', discount_routes); // –†–æ—É—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–∏—Å–∫–æ–Ω—Ç–æ–º (–ø—É—Ç—å: /discount)
logAction('–î–æ–±–∞–≤–ª–µ–Ω—ã —Ä–æ—É—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–∏—Å–∫–æ–Ω—Ç–æ–º –ø–æ –ø—É—Ç–∏ /discount', '‚úÖ');

router.use('/feedbacks', feedback_routes); // –†–æ—É—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –æ—Ç–∑—ã–≤–∞–º–∏ (–ø—É—Ç—å: /feedbacks)
logAction('–î–æ–±–∞–≤–ª–µ–Ω—ã —Ä–æ—É—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –æ—Ç–∑—ã–≤–∞–º–∏ –ø–æ –ø—É—Ç–∏ /feedbacks', '‚úÖ');

router.use('/masters', masters_routes); // –†–æ—É—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º–∞—Å—Ç–µ—Ä–∞–º–∏ (–ø—É—Ç—å: /masters)
logAction('–î–æ–±–∞–≤–ª–µ–Ω—ã —Ä–æ—É—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º–∞—Å—Ç–µ—Ä–∞–º–∏ –ø–æ –ø—É—Ç–∏ /masters', '‚úÖ');

router.use('/reqs', reqs_routes); // –†–æ—É—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∑–∞–ø—Ä–æ—Å–∞–º–∏ (–ø—É—Ç—å: /reqs)
logAction('–î–æ–±–∞–≤–ª–µ–Ω—ã —Ä–æ—É—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∑–∞–ø—Ä–æ—Å–∞–º–∏ –ø–æ –ø—É—Ç–∏ /reqs', '‚úÖ');

router.use('/serv', services_routes); // –†–æ—É—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —É—Å–ª—É–≥–∞–º–∏ (–ø—É—Ç—å: /serv)
logAction('–î–æ–±–∞–≤–ª–µ–Ω—ã —Ä–æ—É—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —É—Å–ª—É–≥–∞–º–∏ –ø–æ –ø—É—Ç–∏ /serv', '‚úÖ');

router.use('/types', serv_types_routes); // –†–æ—É—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–∏–ø–∞–º–∏ —É—Å–ª—É–≥ (–ø—É—Ç—å: /types)
logAction('–î–æ–±–∞–≤–ª–µ–Ω—ã —Ä–æ—É—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–∏–ø–∞–º–∏ —É—Å–ª—É–≥ –ø–æ –ø—É—Ç–∏ /types', '‚úÖ');

router.use('/users', users_routes); // –†–æ—É—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ (–ø—É—Ç—å: /users)
logAction('–î–æ–±–∞–≤–ª–µ–Ω—ã —Ä–æ—É—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –ø–æ –ø—É—Ç–∏ /users', '‚úÖ');

router.use('/statuses', statuses_routes); // –†–æ—É—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å—Ç–∞—Ç—É—Å–∞–º–∏ (–ø—É—Ç—å: /statuses)
logAction('–î–æ–±–∞–≤–ª–µ–Ω—ã —Ä–æ—É—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–æ —Å—Ç–∞—Ç—É—Å–∞–º–∏ –ø–æ –ø—É—Ç–∏ /statuses', '‚úÖ');

// –ù—É–ª–µ–≤–æ–π –ø—É—Ç—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
router.get('/', (req, res) => {
    try {
        res.status(200).json({ message: '–°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç' });
        logAction('–ó–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞ —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω.', 'üü¢');
    } catch (error) {
        logAction('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞: ' + error.message, '‚ùå');
        throw ApiError.internal('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞.');
    }
});

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä, —á—Ç–æ–±—ã –µ–≥–æ –º–æ–∂–Ω–æ –±—ã–ª–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –¥—Ä—É–≥–∏—Ö —á–∞—Å—Ç—è—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
logAction('–ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é.', '‚úÖ');
module.exports = router;
